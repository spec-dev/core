#!/bin/bash

# --- Create and deploy a new K8S indexer range job --- #

# set -e # exit if any child script exits with non-zero status

# ======== PARSE ARGS ======== #

this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
core_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd ../.. && pwd )"
indexers_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"
shared_bin_dir="$core_dir/bin"
etherscan_keys_path="$indexers_dir/.etherscan"
env="$1"
from="$2"
range_size="${3:-100000}"
range_worker_type="abi"

# ======== VALIDATE ARGS ======== #

$shared_bin_dir/validate_arg "env" "$env" "dev|staging|prod"
$shared_bin_dir/validate_arg "from" "$from"

# ======== SET KEY VARS ======== #

chain_id=$( $shared_bin_dir/env_reader "$env" "CHAIN_ID" )
range_group_size=$( $shared_bin_dir/env_reader "$env" "INDEXER_RANGE_GROUP_SIZE" )
alchemy_api_key=$( $shared_bin_dir/env_reader "$env" "ALCHEMY_API_KEY" )
publisher_role_key=$( $shared_bin_dir/env_reader "$env" "PUBLISHER_ROLE_KEY" )
event_relay_hostname=$( $shared_bin_dir/env_reader "$env" "EVENT_RELAY_HOSTNAME" )

# Indexer Redis
indexer_redis_host=$( $shared_bin_dir/env_reader "$env" "INDEXER_REDIS_HOST" )
indexer_redis_port=$( $shared_bin_dir/env_reader "$env" "INDEXER_REDIS_PORT" )

# Indexer DB
indexer_db_name=$( $shared_bin_dir/env_reader "$env" "INDEXER_DB_NAME" )
indexer_db_host=$( $shared_bin_dir/env_reader "$env" "INDEXER_DB_HOST" )
indexer_db_port=$( $shared_bin_dir/env_reader "$env" "INDEXER_DB_PORT" )
indexer_db_username=$( $shared_bin_dir/env_reader "$env" "INDEXER_DB_USERNAME" )
indexer_db_password=$( $shared_bin_dir/env_reader "$env" "INDEXER_DB_PASSWORD" )

# Core Redis
core_redis_host=$( $shared_bin_dir/env_reader "$env" "CORE_REDIS_HOST" )
core_redis_port=$( $shared_bin_dir/env_reader "$env" "CORE_REDIS_PORT" )

# Core DB
core_db_name=$( $shared_bin_dir/env_reader "$env" "CORE_DB_NAME" )
core_db_host=$( $shared_bin_dir/env_reader "$env" "CORE_DB_HOST" )
core_db_port=$( $shared_bin_dir/env_reader "$env" "CORE_DB_PORT" )
core_db_username=$( $shared_bin_dir/env_reader "$env" "CORE_DB_USERNAME" )
core_db_password=$( $shared_bin_dir/env_reader "$env" "CORE_DB_PASSWORD" )

# Shared Tables DB
shared_tables_db_name=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_NAME" )
shared_tables_db_host=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_HOST" )
shared_tables_db_port=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_PORT" )
shared_tables_db_username=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_USERNAME" )
shared_tables_db_password=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_PASSWORD" )

# ABI Redis
abi_redis_host=$( $shared_bin_dir/env_reader "$env" "ABI_REDIS_HOST" )
abi_redis_port=$( $shared_bin_dir/env_reader "$env" "ABI_REDIS_PORT" )

# ======== VALIDATE REQUIRED VARS ======== #

$shared_bin_dir/assert_env "CHAIN_ID" "$chain_id"
$shared_bin_dir/assert_env "INDEXER_RANGE_GROUP_SIZE" "$range_group_size"
$shared_bin_dir/assert_env "ALCHEMY_API_KEY" "$alchemy_api_key"
$shared_bin_dir/assert_env "PUBLISHER_ROLE_KEY" "$publisher_role_key"
$shared_bin_dir/assert_env "EVENT_RELAY_HOSTNAME" "$event_relay_hostname"

# Indexer Redis
$shared_bin_dir/assert_env "INDEXER_REDIS_HOST" "$indexer_redis_host"
$shared_bin_dir/assert_env "INDEXER_REDIS_PORT" "$indexer_redis_port"

# Indexer DB
$shared_bin_dir/assert_env "INDEXER_DB_NAME" "$indexer_db_name"
$shared_bin_dir/assert_env "INDEXER_DB_HOST" "$indexer_db_host"
$shared_bin_dir/assert_env "INDEXER_DB_PORT" "$indexer_db_port"
$shared_bin_dir/assert_env "INDEXER_DB_USERNAME" "$indexer_db_username"
$shared_bin_dir/assert_env "INDEXER_DB_PASSWORD" "$indexer_db_password"

# Core Redis
$shared_bin_dir/assert_env "CORE_REDIS_HOST" "$core_redis_host"
$shared_bin_dir/assert_env "CORE_REDIS_PORT" "$core_redis_port"

# Core DB
$shared_bin_dir/assert_env "CORE_DB_NAME" "$core_db_name"
$shared_bin_dir/assert_env "CORE_DB_HOST" "$core_db_host"
$shared_bin_dir/assert_env "CORE_DB_PORT" "$core_db_port"
$shared_bin_dir/assert_env "CORE_DB_USERNAME" "$core_db_username"
$shared_bin_dir/assert_env "CORE_DB_PASSWORD" "$core_db_password"

# Shared Tables DB
$shared_bin_dir/assert_env "SHARED_TABLES_DB_NAME" "$shared_tables_db_name"
$shared_bin_dir/assert_env "SHARED_TABLES_DB_HOST" "$shared_tables_db_host"
$shared_bin_dir/assert_env "SHARED_TABLES_DB_PORT" "$shared_tables_db_port"
$shared_bin_dir/assert_env "SHARED_TABLES_DB_USERNAME" "$shared_tables_db_username"
$shared_bin_dir/assert_env "SHARED_TABLES_DB_PASSWORD" "$shared_tables_db_password"

# ABI Redis
$shared_bin_dir/assert_env "ABI_REDIS_HOST" "$abi_redis_host"
$shared_bin_dir/assert_env "ABI_REDIS_PORT" "$abi_redis_port"

# ======== GET LATEST IMAGE ======== #

aws_account_id=$( $shared_bin_dir/env_reader "$env" "AWS_ACCOUNT_ID" )
aws_region=$( $shared_bin_dir/env_reader "$env" "AWS_REGION" )
image_org=$( $shared_bin_dir/env_reader "$env" "DOCKER_IMAGE_ORG" )
image_name=$( $shared_bin_dir/env_reader "$env" "INDEXER_IMAGE_NAME" )
image_repo="$image_org/$image_name"
registry_image="$aws_account_id.dkr.ecr.$aws_region.amazonaws.com/$image_repo"
image_version=$( $shared_bin_dir/latest_sha )
# image_version="0eba5ee"
image="$registry_image:$image_version"

# ======== CREATE & APPLY TEMPLATE ======== #

template_path="$indexers_dir/range-job.yaml"

etherscan_keys=$( cat "$etherscan_keys_path" )
IFS=$'\n' read -rd '' -a etherscan_keys_arr <<<"$etherscan_keys"

# Format env pairs (1 per line) into a single string.
to=$(($from + $range_size - 1))
for etherscan_key in "${etherscan_keys_arr[@]}"; do
    job_name="indexer-$image_version-$from-$to-$range_worker_type"

    # Create the config template.
    template=$( cat "$template_path" | \
        sed "s|{{JOB_NAME}}|$job_name|g" | \
        sed "s|{{IMAGE}}|$image|g" | \
        sed "s|{{RANGE_WORKER_TYPE}}|$range_worker_type|g" | \
        sed "s|{{FROM}}|$from|g" | \
        sed "s|{{TO}}|$to|g" | \
        sed "s|{{ETHERSCAN_API_KEY}}|$etherscan_key|g" | \
        sed "s|{{RANGE_GROUP_SIZE}}|$range_group_size|g" | \
        sed "s|{{CHAIN_ID}}|$chain_id|g" | \
        sed "s|{{ALCHEMY_API_KEY}}|$alchemy_api_key|g" | \
        sed "s|{{PUBLISHER_ROLE_KEY}}|$publisher_role_key|g" | \
        sed "s|{{EVENT_RELAY_HOSTNAME}}|$event_relay_hostname|g" | \
        sed "s|{{INDEXER_REDIS_HOST}}|$indexer_redis_host|g" | \
        sed "s|{{INDEXER_REDIS_PORT}}|$indexer_redis_port|g" | \
        sed "s|{{INDEXER_DB_NAME}}|$indexer_db_name|g" | \
        sed "s|{{INDEXER_DB_HOST}}|$indexer_db_host|g" | \
        sed "s|{{INDEXER_DB_PORT}}|$indexer_db_port|g" | \
        sed "s|{{INDEXER_DB_USERNAME}}|$indexer_db_username|g" | \
        sed "s|{{INDEXER_DB_PASSWORD}}|$indexer_db_password|g" | \
        sed "s|{{CORE_REDIS_HOST}}|$core_redis_host|g" | \
        sed "s|{{CORE_REDIS_PORT}}|$core_redis_port|g" | \
        sed "s|{{CORE_DB_NAME}}|$core_db_name|g" | \
        sed "s|{{CORE_DB_HOST}}|$core_db_host|g" | \
        sed "s|{{CORE_DB_PORT}}|$core_db_port|g" | \
        sed "s|{{CORE_DB_USERNAME}}|$core_db_username|g" | \
        sed "s|{{CORE_DB_PASSWORD}}|$core_db_password|g" | \
        sed "s|{{SHARED_TABLES_DB_NAME}}|$shared_tables_db_name|g" | \
        sed "s|{{SHARED_TABLES_DB_HOST}}|$shared_tables_db_host|g" | \
        sed "s|{{SHARED_TABLES_DB_PORT}}|$shared_tables_db_port|g" | \
        sed "s|{{SHARED_TABLES_DB_USERNAME}}|$shared_tables_db_username|g" | \
        sed "s|{{SHARED_TABLES_DB_PASSWORD}}|$shared_tables_db_password|g" | \
        sed "s|{{ABI_REDIS_HOST}}|$abi_redis_host|g" | \
        sed "s|{{ABI_REDIS_PORT}}|$abi_redis_port|g" )

    echo "Creating index range job resources $from --> $to"

    # Apply the template.
    echo "$template" | kubectl apply -f -

    sleep 10
    from=$(($from + $range_size))
    to=$(($to + $range_size))
done