#!/bin/bash

# --- Create and deploy a new K8S indexer range job --- #

set -e # exit if any child script exits with non-zero status

# ======== PARSE ARGS ======== #

this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
core_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd ../.. && pwd )"
indexers_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"
shared_bin_dir="$core_dir/bin"
env="$1"
FROM="$2"
TO="$3"
range_worker_type="${4:-range}"

# ======== VALIDATE ARGS ======== #

$shared_bin_dir/validate_arg "env" "$env" "eth|goerli|polygon|mumbai|base|op|arb|pgn|celo|linea|sepolia"
$shared_bin_dir/validate_arg "FROM" "$FROM"
$shared_bin_dir/validate_arg "TO" "$TO"

# ======== SET KEY VARS ======== #

chain_id=$( $shared_bin_dir/env_reader "$env" "CHAIN_ID" )
range_group_size=$( $shared_bin_dir/env_reader "$env" "INDEXER_RANGE_GROUP_SIZE" )
alchemy_api_key=$( $shared_bin_dir/env_reader "$env" "ALCHEMY_API_KEY" )
alchemy_rest_url=$( $shared_bin_dir/env_reader "$env" "ALCHEMY_REST_URL" )
alchemy_sub_url=$( $shared_bin_dir/env_reader "$env" "ALCHEMY_SUBSCRIPTION_URL" )
rpc_rest_url=$( $shared_bin_dir/env_reader "$env" "RPC_REST_URL" )
rpc_sub_url=$( $shared_bin_dir/env_reader "$env" "RPC_SUBSCRIPTION_URL" )
rpc_pool_endpoints=$( $shared_bin_dir/env_reader "$env" "RPC_POOL_ENDPOINTS" )
http_provider_pool=$( $shared_bin_dir/env_reader "$env" "HTTP_PROVIDER_POOL" )
ws_provider_pool=$( $shared_bin_dir/env_reader "$env" "WS_PROVIDER_POOL" )
publisher_role_key=$( $shared_bin_dir/env_reader "$env" "PUBLISHER_ROLE_KEY" )
event_relay_hostname=$( $shared_bin_dir/env_reader "$env" "EVENT_RELAY_HOSTNAME" )
specific_index_numbers=$( $shared_bin_dir/env_reader "$env" "SPECIFIC_INDEX_NUMBERS" )

# Indexer Redis
indexer_redis_host=$( $shared_bin_dir/env_reader "$env" "INDEXER_REDIS_HOST" )
indexer_redis_port=$( $shared_bin_dir/env_reader "$env" "INDEXER_REDIS_PORT" )

# Indexer DB
indexer_db_name=$( $shared_bin_dir/env_reader "$env" "INDEXER_DB_NAME" )
indexer_db_host=$( $shared_bin_dir/env_reader "$env" "INDEXER_DB_HOST" )
indexer_db_port=$( $shared_bin_dir/env_reader "$env" "INDEXER_DB_PORT" )
indexer_db_username=$( $shared_bin_dir/env_reader "$env" "INDEXER_DB_USERNAME" )
indexer_db_password=$( $shared_bin_dir/env_reader "$env" "INDEXER_DB_PASSWORD" )

# Core Redis
core_redis_host=$( $shared_bin_dir/env_reader "$env" "CORE_REDIS_HOST" )
core_redis_port=$( $shared_bin_dir/env_reader "$env" "CORE_REDIS_PORT" )

# Core DB
core_db_name=$( $shared_bin_dir/env_reader "$env" "CORE_DB_NAME" )
core_db_host=$( $shared_bin_dir/env_reader "$env" "CORE_DB_HOST" )
core_db_port=$( $shared_bin_dir/env_reader "$env" "CORE_DB_PORT" )
core_db_username=$( $shared_bin_dir/env_reader "$env" "CORE_DB_USERNAME" )
core_db_password=$( $shared_bin_dir/env_reader "$env" "CORE_DB_PASSWORD" )

# Shared Tables DB
shared_tables_db_name=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_NAME" )
shared_tables_db_host=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_HOST" )
shared_tables_db_port=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_PORT" )
shared_tables_db_username=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_USERNAME" )
shared_tables_db_password=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_PASSWORD" )
shared_tables_db_url=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_URL" )

# Chain Tables
ethereum_db_url=$( $shared_bin_dir/env_reader "$env" "ETHEREUM_DB_URL" )
goerli_db_url=$( $shared_bin_dir/env_reader "$env" "GOERLI_DB_URL" )
polygon_db_url=$( $shared_bin_dir/env_reader "$env" "POLYGON_DB_URL" )
mumbai_db_url=$( $shared_bin_dir/env_reader "$env" "MUMBAI_DB_URL" )
base_db_url=$( $shared_bin_dir/env_reader "$env" "BASE_DB_URL" )
optimism_db_url=$( $shared_bin_dir/env_reader "$env" "OPTIMISM_DB_URL" )
arbitrum_db_url=$( $shared_bin_dir/env_reader "$env" "ARBITRUM_DB_URL" )
pgn_db_url=$( $shared_bin_dir/env_reader "$env" "PGN_DB_URL" )
celo_db_url=$( $shared_bin_dir/env_reader "$env" "CELO_DB_URL" )
linea_db_url=$( $shared_bin_dir/env_reader "$env" "LINEA_DB_URL" )
sepolia_db_url=$( $shared_bin_dir/env_reader "$env" "SEPOLIA_DB_URL" )

# ABI Redis
abi_redis_host=$( $shared_bin_dir/env_reader "$env" "ABI_REDIS_HOST" )
abi_redis_port=$( $shared_bin_dir/env_reader "$env" "ABI_REDIS_PORT" )

# ======== VALIDATE REQUIRED VARS ======== #

$shared_bin_dir/assert_env "CHAIN_ID" "$chain_id"
$shared_bin_dir/assert_env "INDEXER_RANGE_GROUP_SIZE" "$range_group_size"
$shared_bin_dir/assert_env "RPC_POOL_ENDPOINTS" "$rpc_pool_endpoints"
$shared_bin_dir/assert_env "HTTP_PROVIDER_POOL" "$http_provider_pool"
$shared_bin_dir/assert_env "WS_PROVIDER_POOL" "$ws_provider_pool"
$shared_bin_dir/assert_env "PUBLISHER_ROLE_KEY" "$publisher_role_key"
$shared_bin_dir/assert_env "EVENT_RELAY_HOSTNAME" "$event_relay_hostname"
$shared_bin_dir/assert_env "EVENT_RELAY_HOSTNAME" "$event_relay_hostname"

# Indexer Redis
$shared_bin_dir/assert_env "INDEXER_REDIS_HOST" "$indexer_redis_host"
$shared_bin_dir/assert_env "INDEXER_REDIS_PORT" "$indexer_redis_port"

# Indexer DB
$shared_bin_dir/assert_env "INDEXER_DB_NAME" "$indexer_db_name"
$shared_bin_dir/assert_env "INDEXER_DB_HOST" "$indexer_db_host"
$shared_bin_dir/assert_env "INDEXER_DB_PORT" "$indexer_db_port"
$shared_bin_dir/assert_env "INDEXER_DB_USERNAME" "$indexer_db_username"
$shared_bin_dir/assert_env "INDEXER_DB_PASSWORD" "$indexer_db_password"

# Core Redis
$shared_bin_dir/assert_env "CORE_REDIS_HOST" "$core_redis_host"
$shared_bin_dir/assert_env "CORE_REDIS_PORT" "$core_redis_port"

# Core DB
$shared_bin_dir/assert_env "CORE_DB_NAME" "$core_db_name"
$shared_bin_dir/assert_env "CORE_DB_HOST" "$core_db_host"
$shared_bin_dir/assert_env "CORE_DB_PORT" "$core_db_port"
$shared_bin_dir/assert_env "CORE_DB_USERNAME" "$core_db_username"
$shared_bin_dir/assert_env "CORE_DB_PASSWORD" "$core_db_password"

# Shared Tables DB
$shared_bin_dir/assert_env "SHARED_TABLES_DB_NAME" "$shared_tables_db_name"
$shared_bin_dir/assert_env "SHARED_TABLES_DB_HOST" "$shared_tables_db_host"
$shared_bin_dir/assert_env "SHARED_TABLES_DB_PORT" "$shared_tables_db_port"
$shared_bin_dir/assert_env "SHARED_TABLES_DB_USERNAME" "$shared_tables_db_username"
$shared_bin_dir/assert_env "SHARED_TABLES_DB_PASSWORD" "$shared_tables_db_password"
$shared_bin_dir/assert_env "SHARED_TABLES_DB_URL" "$shared_tables_db_url"

# Chain Tables
$shared_bin_dir/assert_env "ETHEREUM_DB_URL" "$ethereum_db_url"
$shared_bin_dir/assert_env "GOERLI_DB_URL" "$goerli_db_url"
$shared_bin_dir/assert_env "POLYGON_DB_URL" "$polygon_db_url"
$shared_bin_dir/assert_env "MUMBAI_DB_URL" "$mumbai_db_url"
$shared_bin_dir/assert_env "BASE_DB_URL" "$base_db_url"
$shared_bin_dir/assert_env "OPTIMISM_DB_URL" "$optimism_db_url"
$shared_bin_dir/assert_env "ARBITRUM_DB_URL" "$arbitrum_db_url"
$shared_bin_dir/assert_env "PGN_DB_URL" "$pgn_db_url"
$shared_bin_dir/assert_env "CELO_DB_URL" "$celo_db_url"
$shared_bin_dir/assert_env "LINEA_DB_URL" "$linea_db_url"
$shared_bin_dir/assert_env "SEPOLIA_DB_URL" "$sepolia_db_url"

# ABI Redis
$shared_bin_dir/assert_env "ABI_REDIS_HOST" "$abi_redis_host"
$shared_bin_dir/assert_env "ABI_REDIS_PORT" "$abi_redis_port"

# ======== GET LATEST IMAGE ======== #

aws_account_id=$( $shared_bin_dir/env_reader "$env" "AWS_ACCOUNT_ID" )
aws_region=$( $shared_bin_dir/env_reader "$env" "AWS_REGION" )
image_org=$( $shared_bin_dir/env_reader "$env" "DOCKER_IMAGE_ORG" )
image_name=$( $shared_bin_dir/env_reader "$env" "INDEXER_IMAGE_NAME" )
image_repo="$image_org/$image_name"
registry_image="$aws_account_id.dkr.ecr.$aws_region.amazonaws.com/$image_repo"
# image_version=$( $shared_bin_dir/latest_sha )

# arb logs
# image_version="74b171c"

# image_version="d81feb0"

image_version="2b6663c"
image="$registry_image:$image_version"

# ======== CREATE & APPLY TEMPLATE ======== #

template_path="$indexers_dir/range-job.yaml"
job_name="indexer-$image_version-$FROM-$TO-$range_worker_type"

# Create the config template.
template=$( cat "$template_path" | \
    sed "s|{{JOB_NAME}}|$job_name|g" | \
    sed "s|{{IMAGE}}|$image|g" | \
    sed "s|{{RANGE_WORKER_TYPE}}|$range_worker_type|g" | \
    sed "s|{{FROM}}|$FROM|g" | \
    sed "s|{{TO}}|$TO|g" | \
    sed "s|{{SPECIFIC_INDEX_NUMBERS}}|$specific_index_numbers|g" | \
    sed "s|{{RANGE_GROUP_SIZE}}|$range_group_size|g" | \
    sed "s|{{CHAIN_ID}}|$chain_id|g" | \
    sed "s|{{ALCHEMY_API_KEY}}|$alchemy_api_key|g" | \
    sed "s|{{ALCHEMY_REST_URL}}|$alchemy_rest_url|g" | \
    sed "s|{{ALCHEMY_SUBSCRIPTION_URL}}|$alchemy_sub_url|g" | \
    sed "s|{{RPC_REST_URL}}|$rpc_rest_url|g" | \
    sed "s|{{RPC_SUBSCRIPTION_URL}}|$rpc_sub_url|g" | \
    sed "s|{{RPC_POOL_ENDPOINTS}}|$rpc_pool_endpoints|g" | \
    sed "s^{{HTTP_PROVIDER_POOL}}^$http_provider_pool^g" | \
    sed "s^{{WS_PROVIDER_POOL}}^$ws_provider_pool^g" | \
    sed "s|{{PUBLISHER_ROLE_KEY}}|$publisher_role_key|g" | \
    sed "s|{{EVENT_RELAY_HOSTNAME}}|$event_relay_hostname|g" | \
    sed "s|{{INDEXER_REDIS_HOST}}|$indexer_redis_host|g" | \
    sed "s|{{INDEXER_REDIS_PORT}}|$indexer_redis_port|g" | \
    sed "s|{{INDEXER_DB_NAME}}|$indexer_db_name|g" | \
    sed "s|{{INDEXER_DB_HOST}}|$indexer_db_host|g" | \
    sed "s|{{INDEXER_DB_PORT}}|$indexer_db_port|g" | \
    sed "s|{{INDEXER_DB_USERNAME}}|$indexer_db_username|g" | \
    sed "s|{{INDEXER_DB_PASSWORD}}|$indexer_db_password|g" | \
    sed "s|{{CORE_REDIS_HOST}}|$core_redis_host|g" | \
    sed "s|{{CORE_REDIS_PORT}}|$core_redis_port|g" | \
    sed "s|{{CORE_DB_NAME}}|$core_db_name|g" | \
    sed "s|{{CORE_DB_HOST}}|$core_db_host|g" | \
    sed "s|{{CORE_DB_PORT}}|$core_db_port|g" | \
    sed "s|{{CORE_DB_USERNAME}}|$core_db_username|g" | \
    sed "s|{{CORE_DB_PASSWORD}}|$core_db_password|g" | \
    sed "s|{{SHARED_TABLES_DB_NAME}}|$shared_tables_db_name|g" | \
    sed "s|{{SHARED_TABLES_DB_HOST}}|$shared_tables_db_host|g" | \
    sed "s|{{SHARED_TABLES_DB_PORT}}|$shared_tables_db_port|g" | \
    sed "s|{{SHARED_TABLES_DB_USERNAME}}|$shared_tables_db_username|g" | \
    sed "s|{{SHARED_TABLES_DB_PASSWORD}}|$shared_tables_db_password|g" | \
    sed "s|{{SHARED_TABLES_DB_URL}}|$shared_tables_db_url|g" | \
    sed "s|{{ETHEREUM_DB_URL}}|$ethereum_db_url|g" | \
    sed "s|{{GOERLI_DB_URL}}|$goerli_db_url|g" | \
    sed "s|{{POLYGON_DB_URL}}|$polygon_db_url|g" | \
    sed "s|{{MUMBAI_DB_URL}}|$mumbai_db_url|g" | \
    sed "s|{{BASE_DB_URL}}|$base_db_url|g" | \
    sed "s|{{OPTIMISM_DB_URL}}|$optimism_db_url|g" | \
    sed "s|{{ARBITRUM_DB_URL}}|$arbitrum_db_url|g" | \
    sed "s|{{PGN_DB_URL}}|$pgn_db_url|g" | \
    sed "s|{{CELO_DB_URL}}|$celo_db_url|g" | \
    sed "s|{{LINEA_DB_URL}}|$linea_db_url|g" | \
    sed "s|{{SEPOLIA_DB_URL}}|$sepolia_db_url|g" | \
    sed "s|{{ABI_REDIS_HOST}}|$abi_redis_host|g" | \
    sed "s|{{ABI_REDIS_PORT}}|$abi_redis_port|g" )

echo "Creating index range job resources..."

# Apply the template.
echo "$template" | kubectl apply -f -