#!/bin/bash

# --- Create and deploy K8S event-sorter job resources --- #

set -e # exit if any child script exits with non-zero status

# ======== PARSE ARGS ======== #

this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
core_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd ../.. && pwd )"
event_sorter="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"
shared_bin_dir="$core_dir/bin"
env=$1

# ======== VALIDATE ARGS ======== #

$shared_bin_dir/validate_arg "env" "$env" "eth|eth-dev|goerli|polygon|mumbai|base"

# ======== SET KEY VARS ======== #

chain_id=$( $shared_bin_dir/env_reader "$env" "CHAIN_ID" )
bugsnag_api_key=$( $shared_bin_dir/env_reader "$env" "EVENT_SORTER_BUGSNAG_API_KEY" )

# Indexer Redis
indexer_redis_host=$( $shared_bin_dir/env_reader "$env" "INDEXER_REDIS_HOST" )
indexer_redis_port=$( $shared_bin_dir/env_reader "$env" "INDEXER_REDIS_PORT" )

# ======== VALIDATE REQUIRED VARS ======== #

$shared_bin_dir/assert_env "CHAIN_ID" "$chain_id"

# Indexer Redis
$shared_bin_dir/assert_env "INDEXER_REDIS_HOST" "$indexer_redis_host"
$shared_bin_dir/assert_env "INDEXER_REDIS_PORT" "$indexer_redis_port"

# ======== GET LATEST IMAGE ======== #

aws_account_id=$( $shared_bin_dir/env_reader "$env" "AWS_ACCOUNT_ID" )
aws_region=$( $shared_bin_dir/env_reader "$env" "AWS_REGION" )
image_org=$( $shared_bin_dir/env_reader "$env" "DOCKER_IMAGE_ORG" )
image_name=$( $shared_bin_dir/env_reader "$env" "EVENT_SORTER_IMAGE_NAME" )
image_repo="$image_org/$image_name"
registry_image="$aws_account_id.dkr.ecr.$aws_region.amazonaws.com/$image_repo"
# image_version=$( $shared_bin_dir/latest_sha )
image_version="ce3a6ff"
# image_version="d5c5bd5"
image="$registry_image:$image_version"

# ======== CREATE & APPLY TEMPLATE ======== #
 
template_path="$event_sorter/event-sorter.yaml"

# Create the config template.
template=$( cat "$template_path" | \
    sed "s|{{IMAGE}}|$image|g" | \
    sed "s|{{CHAIN_ID}}|$chain_id|g" | \
    sed "s|{{INDEXER_REDIS_HOST}}|$indexer_redis_host|g" | \
    sed "s|{{INDEXER_REDIS_PORT}}|$indexer_redis_port|g"  | \
    sed "s|{{BUGSNAG_API_KEY}}|$bugsnag_api_key|g" )

echo "Creating event-sorter job resources..."

# Apply the template.
echo "$template" | kubectl apply -f -
