apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      component: event-relay
  template:
    metadata:
      labels:
        component: event-relay
    spec:
      containers:
      - name: event-relay
        image: {{IMAGE}}
        ports:
        - name: event-relay
          containerPort: {{SOCKETCLUSTER_PORT}}
        env:
        - name: SCC_INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ENV
          value: prod
        - name: JWT_SECRET
          value: {{JWT_SECRET}}
        - name: SOCKETCLUSTER_PORT
          value: "{{SOCKETCLUSTER_PORT}}"
        - name: CORE_DB_NAME
          value: {{CORE_DB_NAME}}
        - name: CORE_DB_HOST
          value: {{CORE_DB_HOST}}
        - name: CORE_DB_PORT
          value: "{{CORE_DB_PORT}}"
        - name: CORE_DB_USERNAME
          value: {{CORE_DB_USERNAME}}
        - name: CORE_DB_PASSWORD
          value: {{CORE_DB_PASSWORD}}
        readinessProbe:
          httpGet:
            path: /health-check
            port: event-relay
          initialDelaySeconds: 5
          timeoutSeconds: 10
        livenessProbe:
          httpGet:
            path: /health-check
            port: event-relay
          initialDelaySeconds: 15
          timeoutSeconds: 20
        volumeMounts:
        - mountPath: /usr/src/app
          name: app-src-volume
      volumes:
      - name: app-src-volume
        emptyDir: {}
      initContainers:
      - name: app-src-container
        image: ""
        volumeMounts:
        - mountPath: /usr/dest
          name: app-src-volume
        command:
          - cp
          - '-a'
          - /usr/src/.
          - /usr/dest/
---
apiVersion: v1
kind: Service
metadata:
  name: event-relay
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: {{SOCKETCLUSTER_PORT}}
  selector:
    component: event-relay
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: event-relay
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  backend:
    serviceName: event-relay
    servicePort: 80
