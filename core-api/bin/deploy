#!/bin/bash

# --- Create and deploy the event-relay worker --- #

set -e # exit if any child script exits with non-zero status

# ======== PARSE ARGS ======== #

this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
core_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd ../.. && pwd )"
core_api_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"
shared_bin_dir="$core_dir/bin"
env=$1

# ======== SET KEY VARS ======== #

port=$( $shared_bin_dir/env_reader "$env" "SOCKETCLUSTER_PORT" )
log_level=$( $shared_bin_dir/env_reader "$env" "SOCKETCLUSTER_LOG_LEVEL" )
jwt_secret=$( $shared_bin_dir/env_reader "$env" "JWT_SECRET" )
core_api_admin_token=$( $shared_bin_dir/env_reader "$env" "CORE_API_ADMIN_TOKEN" )
bugsnag_api_key=$( $shared_bin_dir/env_reader "$env" "CORE_API_BUGSNAG_API_KEY" )

# Core DB
core_db_name=$( $shared_bin_dir/env_reader "$env" "CORE_DB_NAME" )
core_db_host=$( $shared_bin_dir/env_reader "$env" "CORE_DB_HOST" )
core_db_port=$( $shared_bin_dir/env_reader "$env" "CORE_DB_PORT" )
core_db_username=$( $shared_bin_dir/env_reader "$env" "CORE_DB_USERNAME" )
core_db_password=$( $shared_bin_dir/env_reader "$env" "CORE_DB_PASSWORD" )

# Core Redis
core_redis_host=$( $shared_bin_dir/env_reader "$env" "CORE_REDIS_HOST" )
core_redis_port=$( $shared_bin_dir/env_reader "$env" "CORE_REDIS_PORT" )

# Indexer Redis
indexer_redis_host=$( $shared_bin_dir/env_reader "$env" "INDEXER_REDIS_HOST" )
indexer_redis_port=$( $shared_bin_dir/env_reader "$env" "INDEXER_REDIS_PORT" )

# ABI Redis
abi_redis_host=$( $shared_bin_dir/env_reader "$env" "ABI_REDIS_HOST" )
abi_redis_port=$( $shared_bin_dir/env_reader "$env" "ABI_REDIS_PORT" )

# Shared Tables DB
shared_tables_db_name=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_NAME" )
shared_tables_db_port=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_PORT" )
shared_tables_db_username=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_USERNAME" )
shared_tables_db_password=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DB_PASSWORD" )
shared_tables_default_role=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_DEFAULT_ROLE" )
shared_tables_reader_host=$( $shared_bin_dir/env_reader "$env" "SHARED_TABLES_READER_HOST" )

# ======== VALIDATE REQUIRED VARS ======== #

$shared_bin_dir/assert_env "SOCKETCLUSTER_PORT" "$port"
$shared_bin_dir/assert_env "SOCKETCLUSTER_LOG_LEVEL" "$log_level"
$shared_bin_dir/assert_env "JWT_SECRET" "$jwt_secret"
$shared_bin_dir/assert_env "CORE_API_ADMIN_TOKEN" "$core_api_admin_token"

# Core DB
$shared_bin_dir/assert_env "CORE_DB_NAME" "$core_db_name"
$shared_bin_dir/assert_env "CORE_DB_HOST" "$core_db_host"
$shared_bin_dir/assert_env "CORE_DB_PORT" "$core_db_port"
$shared_bin_dir/assert_env "CORE_DB_USERNAME" "$core_db_username"
$shared_bin_dir/assert_env "CORE_DB_PASSWORD" "$core_db_password"

# Core Redis
$shared_bin_dir/assert_env "CORE_REDIS_HOST" "$core_redis_host"
$shared_bin_dir/assert_env "CORE_REDIS_PORT" "$core_redis_port"

# Indexer Redis
$shared_bin_dir/assert_env "INDEXER_REDIS_HOST" "$indexer_redis_host"
$shared_bin_dir/assert_env "INDEXER_REDIS_PORT" "$indexer_redis_port"

# ABI Redis
$shared_bin_dir/assert_env "ABI_REDIS_HOST" "$abi_redis_host"
$shared_bin_dir/assert_env "ABI_REDIS_PORT" "$abi_redis_port"

# Shared Tables DB
$shared_bin_dir/assert_env "SHARED_TABLES_DB_NAME" "$shared_tables_db_name"
$shared_bin_dir/assert_env "SHARED_TABLES_DB_PORT" "$shared_tables_db_port"
$shared_bin_dir/assert_env "SHARED_TABLES_DB_USERNAME" "$shared_tables_db_username"
$shared_bin_dir/assert_env "SHARED_TABLES_DB_PASSWORD" "$shared_tables_db_password"
$shared_bin_dir/assert_env "SHARED_TABLES_DEFAULT_ROLE" "$shared_tables_default_role"
$shared_bin_dir/assert_env "SHARED_TABLES_READER_HOST" "$shared_tables_reader_host"

# ======== GET LATEST IMAGE ======== #

aws_account_id=$( $shared_bin_dir/env_reader "$env" "AWS_ACCOUNT_ID" )
aws_region=$( $shared_bin_dir/env_reader "$env" "AWS_REGION" )
image_org=$( $shared_bin_dir/env_reader "$env" "DOCKER_IMAGE_ORG" )
image_name=$( $shared_bin_dir/env_reader "$env" "CORE_API_IMAGE_NAME" )
image_repo="$image_org/$image_name"
registry_image="$aws_account_id.dkr.ecr.$aws_region.amazonaws.com/$image_repo"
# image_version=$( $shared_bin_dir/latest_sha )
image_version="38b1e91"
image="$registry_image:$image_version"

# ======== CREATE & APPLY TEMPLATE ======== #

template_path="$core_api_dir/core-api.yaml"

# Create the config template.
template=$( cat "$template_path" | \
    sed "s|{{IMAGE}}|$image|g" | \
    sed "s|{{JWT_SECRET}}|$jwt_secret|g" | \
    sed "s|{{SOCKETCLUSTER_PORT}}|$port|g" | \
    sed "s|{{SOCKETCLUSTER_LOG_LEVEL}}|$log_level|g" | \
    sed "s|{{CORE_API_ADMIN_TOKEN}}|$core_api_admin_token|g" | \
    sed "s|{{BUGSNAG_API_KEY}}|$bugsnag_api_key|g" | \
    sed "s|{{CORE_DB_NAME}}|$core_db_name|g" | \
    sed "s|{{CORE_DB_HOST}}|$core_db_host|g" | \
    sed "s|{{CORE_DB_PORT}}|$core_db_port|g" | \
    sed "s|{{CORE_DB_USERNAME}}|$core_db_username|g" | \
    sed "s|{{CORE_DB_PASSWORD}}|$core_db_password|g" | \
    sed "s|{{CORE_REDIS_HOST}}|$core_redis_host|g" | \
    sed "s|{{CORE_REDIS_PORT}}|$core_redis_port|g" | \
    sed "s|{{ABI_REDIS_HOST}}|$abi_redis_host|g" | \
    sed "s|{{ABI_REDIS_PORT}}|$abi_redis_port|g" | \
    sed "s|{{SHARED_TABLES_DB_NAME}}|$shared_tables_db_name|g" | \
    sed "s|{{SHARED_TABLES_DB_PORT}}|$shared_tables_db_port|g" | \
    sed "s|{{SHARED_TABLES_DB_USERNAME}}|$shared_tables_db_username|g" | \
    sed "s|{{SHARED_TABLES_DB_PASSWORD}}|$shared_tables_db_password|g" | \
    sed "s|{{SHARED_TABLES_DEFAULT_ROLE}}|$shared_tables_default_role|g" | \
    sed "s|{{SHARED_TABLES_READER_HOST}}|$shared_tables_reader_host|g" | \
    sed "s|{{INDEXER_REDIS_HOST}}|$indexer_redis_host|g" | \
    sed "s|{{INDEXER_REDIS_PORT}}|$indexer_redis_port|g" )

echo "Creating Core API resources..."

# Apply the template.
echo "$template" | kubectl apply -f -
