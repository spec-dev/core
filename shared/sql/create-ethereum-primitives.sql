CREATE SCHEMA IF NOT EXISTS "ethereum";

-- ethereum.blocks
CREATE TABLE "ethereum"."blocks" ("hash" character varying(70) NOT NULL, "number" bigint NOT NULL, "parent_hash" character varying(70), "nonce" character varying(20) NOT NULL, "sha3_uncles" character varying(70), "logs_bloom" character varying, "transactions_root" character varying(70), "state_root" character varying(70), "receipts_root" character varying(70), "miner" character varying(50), "difficulty" character varying, "total_difficulty" character varying, "size" bigint, "extra_data" character varying, "gas_limit" character varying(70), "gas_used" character varying(70), "base_fee_per_gas" character varying(70), "transaction_count" integer NOT NULL, "timestamp" TIMESTAMP WITH TIME ZONE NOT NULL, CONSTRAINT "PK_00d4f3eb491f00ae5bece2a559e" PRIMARY KEY ("hash"));
CREATE UNIQUE INDEX "idx_ethereum_blocks_by_number" ON "ethereum"."blocks" ("number");

-- ethereum.transactions
CREATE TABLE "ethereum"."transactions" ("hash" character varying(70) NOT NULL, "nonce" bigint NOT NULL, "transaction_index" integer NOT NULL, "from" character varying(50), "to" character varying(50), "contract_address" character varying(50), "value" character varying(70), "input" character varying, "function_name" character varying, "function_args" json, "transaction_type" smallint, "status" smallint, "root" character varying(70), "gas" character varying(70), "gas_price" character varying(70), "max_fee_per_gas" character varying(70), "max_priority_fee_per_gas" character varying(70), "gas_used" character varying(70), "cumulative_gas_used" character varying(70), "effective_gas_price" character varying(70), "block_hash" character varying(70) NOT NULL, "block_number" bigint NOT NULL, "block_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL, CONSTRAINT "PK_6f30cde2f4cf5a630e053758400" PRIMARY KEY ("hash"));

-- ethereum.logs
CREATE TABLE "ethereum"."logs" ("log_index" bigint NOT NULL, "transaction_hash" character varying(70) NOT NULL, "transaction_index" integer NOT NULL, "address" character varying(50), "data" character varying, "topic0" character varying, "topic1" character varying, "topic2" character varying, "topic3" character varying, "event_name" character varying, "event_args" json, "block_hash" character varying(70) NOT NULL, "block_number" bigint NOT NULL, "block_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL, CONSTRAINT "PK_d0c26ca198324a31f47ccf3825b" PRIMARY KEY ("log_index", "transaction_hash"));

-- ethereum.traces
CREATE TABLE "ethereum"."traces" ("id" character varying NOT NULL, "transaction_hash" character varying(70), "transaction_index" integer, "from" character varying(50), "to" character varying(50), "value" character varying(70), "input" character varying, "output" character varying, "function_name" character varying, "function_args" json, "function_outputs" json, "trace_type" character varying(20) NOT NULL, "call_type" character varying(20), "reward_type" character varying(20), "subtraces" bigint, "trace_address" character varying, "trace_index" integer NOT NULL, "error" character varying, "status" smallint, "gas" character varying(70), "gas_used" character varying(70), "block_hash" character varying(70) NOT NULL, "block_number" bigint NOT NULL, "block_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL, CONSTRAINT "PK_a28bd8d9b09a77802bb18fbc2f5" PRIMARY KEY ("id"));

-- ethereum.contracts
CREATE TABLE "ethereum"."contracts" ("address" character varying(50) NOT NULL, "bytecode" character varying, "is_erc20" boolean, "is_erc721" boolean, "is_erc1155" boolean, "block_hash" character varying(70) NOT NULL, "block_number" bigint NOT NULL, "block_timestamp" TIMESTAMP WITH TIME ZONE NOT NULL, CONSTRAINT "PK_71a93ca1569ed761dced911f0a4" PRIMARY KEY ("address"));